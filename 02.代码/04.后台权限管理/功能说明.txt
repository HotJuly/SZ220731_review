无论是多大的公司,他们的后台管理系统都至少有两级权限:
    1.管理员
        拥有当前项目所有的模块的观看权限和功能的使用权限
    2.访客
        拥有当前项目部分莫管的观看权限和功能的使用权限

    权限管理系统一共由两部分组成
        1.路由级别的权限管理
            目的:控制当前账号能够看到使用哪些路由(模块)
        2.按钮级别的权限管理
            目的:控制当前账号能够使用哪些按钮功能(例如品牌的增删改查)

第一部分:路由级别权限管理
需求:根据当前账号的权限,控制项目能够使用哪些路由?
拆解:
    1.根据当前账号的权限
        必须在登录帐号之后才能获取到权限信息
        此处登录过程中,一共有2个接口
            login接口->将用户输入的帐号密码,兑换成用户的唯一标识token字符串
            info接口->将用户的唯一标识token,兑换成用户的账号相关信息,其中的重要属性
                name->帐号名称
                avatar->帐号头像
                buttons->这是与按钮级别权限管理相关的数据
                    数据类型:string[]
                routes->这是用于实现路由级别权限管理相关的数据
                    数据类型:string[]
                    内部的字符串,其实都是当前账号能够访问的路由的别名

    2.控制项目能够使用哪些路由
        问题:如何让用户无法访问一个路由?
        回答:
            方案一:只要开发者不注册这个路由,那么用户肯定无法访问
            方案二:通过导航守卫,在用户跳转某个路由的时候,拦截并执行next(false),不让他跳转

            市面上用的比较多的是方案一,因为操作简单,而且出错概率小

        问题:如何动态注册路由?
        回答:
            语法一:router.addRoute(某个路由对象)
            语法二:router.addRoutes([多个路由对象])
                Vue2项目选择语法二,Vue3选择语法一


    流程总结:
        1.将原本的路由数组分解为三个路由数组
            常量路由
            异步路由
            任意路由

        2.将常量路由数组传入VueRouter进行注册
            由于该操作只注入了常量路由,所以异步路由和任意路由都没法访问

        3.用户在登录帐号的时候,
            通过login接口,将用户帐号密码,兑换成用户的唯一标识token字符串
            再通过info接口,将用户的唯一标识token,兑换成用户的权限信息

        4.将请求的到的权限相关数据,保存在Vuex中
        
        5.封装一个专门用于过滤异步路由的数组
            将当前项目所有的异步路由传入其中,同时在将请求得到的有资格访问的路由别名数组也传入内部
            过滤得到当前账号有资格访问到的异步路由对象组成的数组

        6.使用addRoutes语法,将流程5中,获取到的最新的异步路由数组,进行注册

    在此期间遇到的BUG:
        1.左侧动态列表显示BUG
            问题:sideBar组件他是根据在new VueRouter的时候传入的routes数组来生成菜单的
                但是由于已经实现了路由级别权限管理,导致routes数组中只有常量路由

            解决方法:在Vuex中,创建一个状态数据menuList,该属性收集当前账号能够访问的所有的路由对象
                最后,让sideBar组件映射该数据,用来遍历展示左侧列表

        2.路由随着帐号的切换,个数越来越少
            问题:由于登出帐号,并不会导致当前项目刷新,下个用户登录的时候,还是拿着上个用户剩余异步路由进行再次过滤
            解决方法:每次过滤异步路由的时候,都不去过滤原件,都是使用cloneDeep获取到一份全新的异步路由,在进行过滤

        3.在某个异步路由地址下,刷新当前页面,会出现白屏问题
            问题:因为虽然我们是在addRoutes之后才跳转对应的异步路由的,但是addRoutes的效果是异步注册
            解决方法:
                将next()换成next({...to})或者next(to.path)
                    因为next()是跳转到指定路由,只跳转一次
                    而next({...to})或者next(to.path),也是跳转到指定路由,但是会跳转两次
                        也就是说会强制跳转一次


第二部分:按钮级别权限管理
需求:根据当前账号的权限,控制用户能够使用哪些按钮功能?
拆解:
    1.根据当前账号的权限
        必须在登录帐号之后才能获取到权限信息
        此处登录过程中,一共有2个接口
            login接口->将用户输入的帐号密码,兑换成用户的唯一标识token字符串
            info接口->将用户的唯一标识token,兑换成用户的账号相关信息,其中的重要属性
                name->帐号名称
                avatar->帐号头像
                buttons->这是与按钮级别权限管理相关的数据
                    数据类型:string[]
                    内部的字符串,其实都是当前账号能够使用的按钮权限
                        例如:btn.Trademark.add->代表当前账号具有品牌模块的添加权限

                routes->这是用于实现路由级别权限管理相关的数据
                    数据类型:string[]
                    内部的字符串,其实都是当前账号能够访问的路由的别名

    2.控制用户能够使用哪些按钮功能
        问题:如何让用户无法使用一个按钮?
        回答:让该按钮消失,那么用户就无法使用该按钮
            v-if和v-show都可以让按钮消失
            v-if其实是代表当前项目不解析该节点
            v-show其实是代表当前项目解析该节点,但是不显示该节点(通过display:none隐藏)

            需要考虑到用户可能会一定的前端技术,那么很能控制button的样式,让其显示出来
                所以选择使用v-if

    流程总结:
        1.创建一个自定义指定,目的是为了简化开发者的操作,省的每次都写非常多的代码

        2.在自定义指令中,
            -会获取到info接口返回的buttons数组
            -获取到当前指令的属性值
            -使用includes方法,在buttons数组中查找是否具有该按钮的使用权限
            -如果没有使用权限,就是用removeChild方法,将该按钮从页面上删除



功能流程说明:七天免登陆功能
    用户第一次使用项目:
        1.用户第一次使用项目,用户需要到login页面
            输入帐号密码,并发送请求login接口,可以兑换回用户的token标识

        2.此时,js代码将该token,使用localStorage缓存起来,留给下次使用

    用户第二次使用项目:
        1.用户打开项目,会触发全局前置守卫
        2.在全局前置守卫的回调函数中,我们会读取上一次缓存的token数据
        3.将本次获取到的token数据,发送请求给info接口,兑换用户的个人信息
        4.将用户的个人信息存储在Vuex中,方便本次项目的展示

    注意:
        1.token是否过期,是否7天免登陆,是由后端判断的
            如果token过期了,后端会返回响应状态码401
            那么前端如果接收到状态码为401,就需要请求logout接口,并清除当前项目中的个人信息以及token
                然后强制用户跳转到login页面,提示他重新登录
        2.所谓的7天免登陆,并不是真的不用登陆,
            而是用户第二次使用项目的时候,不需要再去login界面,我们在js中帮他登陆了