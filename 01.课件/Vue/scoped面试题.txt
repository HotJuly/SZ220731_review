问题一:Vue-cli脚手架,是如何解析.vue中的style样式的,请说明过程
回答:
	1.webpack脚手架如果遇到了.vue文件,就会使用vue-loader来解析当前.vue类型的文件

	2.webpack编译.vue文件之后,会获取到style标签中的sass样式代码
		此时会使用sass-loader来解析sass代码,将其变为css样式

	3.webpack遇到css代码的时候,需要使用css-loader来解析css代码
		使用之后,会将css代码编译成js版本的css代码

	4.webpack最后会使用style-loader,将js版本的css代码使用style标签插入到页面上
		

问题二:那么,如何让每个组件的样式,不影响到其他组件?
回答:给当前组件的style标签上,添加一个scoped属性,来约束样式的作用范围

问题三:scoped的作用范围
回答:作用范围是当前组件内部的标签,其实还可以作用于子组件的根标签上

问题四:scoped是如何做到样式具有作用域效果的
回答
	1.他会给当前组件中所有的节点还有子组件的根节点,都加上一个唯一的标识hash值
	2.他还会给样式中最后一个选择器,添加上一个标签属性选择器

问题五:那么,既然scoped会生成css作用域,如何穿透该作用域
回答:
	由于使用了scoped属性,会导致样式出现作用域效果,
	想要穿透这个作用域的做法有两种
		1.使用深度选择器
			Vue2的深度选择器:  ::v-deep 选择器{}
			Vue3的深度选择器:	 ::deep(选择器){}
			
		2.将样式写为全局样式
			就是在写一个style标签,不加scoped就可以

问题六:深度选择器是如何实现该效果的?
回答:
	其实就是将本来添加在最后一个选择器上的属性选择器(hash值),改放到了前一个类名上
		这样就可以提高样式的作用范围
